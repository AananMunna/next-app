"use client"; 
// ЁЯФС ржПржЗ ржлрж╛ржЗрж▓ржЯрж╛ client-side component (React hooks ржмрзНржпржмрж╣рж╛рж░ ржХрж░ржмрзЛ)

import { useState } from "react"; // тЬЕ React state ржмрзНржпржмрж╣рж╛рж░рзЗрж░ ржЬржирзНржп useState рж╣рзБржХ
import { signIn } from "next-auth/react"; // тЬЕ next-auth ржПрж░ signIn ржорзЗржержб (ржЕржЯрзЛржорзЗржЯрж┐ржХ рж▓ржЧржЗржирзЗрж░ ржЬржирзНржп)
import { useRouter } from "next/navigation"; // тЬЕ Next.js ржП рж░рж╛ржЙржЯрж╛рж░ (redirect ржХрж░рж╛рж░ ржЬржирзНржп)

export default function RegisterPage() {
  // ЁЯФз State ржЧрзБрж▓рзЛ ржбрж┐ржХрзНрж▓рзЗржпрж╝рж╛рж░ ржХрж░ржЫрж┐ (form input data рж░рж╛ржЦрж╛рж░ ржЬржирзНржп)
  const [name, setName] = useState("");       // ржЗржЙржЬрж╛рж░рзЗрж░ ржирж╛ржо
  const [email, setEmail] = useState("");     // ржЗржЙржЬрж╛рж░рзЗрж░ ржЗржорзЗржЗрж▓
  const [password, setPassword] = useState(""); // ржЗржЙржЬрж╛рж░рзЗрж░ ржкрж╛рж╕ржУржпрж╝рж╛рж░рзНржб
  const [error, setError] = useState("");     // ржХрзЛржирзЛ error рж╣рж▓рзЗ ржжрзЗржЦрж╛ржирзЛрж░ ржЬржирзНржп
  const router = useRouter();                 // рж░рж╛ржЙржЯрж╛рж░ instance

  // ЁЯУЭ ржлрж░рзНржо рж╕рж╛ржмржорж┐ржЯ рж╣рзНржпрж╛ржирзНржбрж▓рж╛рж░
  const handleSubmit = async (e) => {
    e.preventDefault(); // ржбрж┐ржлрж▓рзНржЯ рж░рж┐ржлрзНрж░рзЗрж╢ ржмржирзНржз ржХрж░рзЛ
    setError("");       // ржЖржЧрзЗрж░ error ржХрзНрж▓рж┐рзЯрж╛рж░ ржХрж░рзЛ

    // ЁЯЪА ржкрзНрж░ржержорзЗ рж░рзЗржЬрж┐рж╕рзНржЯрзНрж░рзЗрж╢ржи API ржХрж▓ ржХрж░ржмрзЛ
    const res = await fetch("/api/auth/register", {
      method: "POST", // ржирждрзБржи ржбрж╛ржЯрж╛ ржкрж╛ржарж╛ржирзЛрж░ ржЬржирзНржп POST ржорзЗржержб
      body: JSON.stringify({ name, email, password }), // name, email, password JSON ржП ржкрж╛ржарж╛ржирзЛ рж╣рж▓рзЛ
      headers: { "Content-Type": "application/json" }, // ржЬрж╛ржирж╛ржЪрзНржЫрж┐ ржЖржорж░рж╛ JSON ржкрж╛ржарж╛ржЪрзНржЫрж┐
    });

    const data = await res.json(); // API ржерзЗржХрзЗ рж░рзЗрж╕ржкржирзНрж╕ JSON ржП рж░рзВржкрж╛ржирзНрждрж░

    // тЭМ ржпржжрж┐ рж░рзЗржЬрж┐рж╕рзНржЯрж╛рж░ ржмрзНржпрж░рзНрже рж╣ржпрж╝, рждрж╛рж╣рж▓рзЗ error ржжрзЗржЦрж╛ржУ
    if (!res.ok) {
      setError(data.message || "ржХрж┐ржЫрзБ ржнрзБрж▓ рж╣ржпрж╝рзЗржЫрзЗ");
      return;
    }

    // тЬЕ рж░рзЗржЬрж┐рж╕рзНржЯрж╛рж░ рж╕ржлрж▓ рж╣рж▓рзЗ ржПржмрж╛рж░ ржЕржЯрзЛржорзЗржЯрж┐ржХ рж▓ржЧржЗржи ржХрж░рж╛ржУ
    const loginRes = await signIn("credentials", {
      redirect: false, // тЬЕ ржорзНржпрж╛ржирзБржпрж╝рж╛рж▓рж┐ redirect ржХрж░ржмрзЛ
      email,
      password,
    });

    // тЭМ ржпржжрж┐ рж▓ржЧржЗржи ржП ржХрзЛржирзЛ рж╕ржорж╕рзНржпрж╛ рж╣ржпрж╝
    if (loginRes?.error) {
      setError(loginRes.error);
      return;
    }

    // ЁЯОЙ рж▓ржЧржЗржи рж╕ржлрж▓ тЖТ ржЗржЙржЬрж╛рж░ржХрзЗ рж╣рзЛржоржкрзЗржЬрзЗ ржкрж╛ржарж╛ржирзЛ рж╣рж▓рзЛ
    router.push("/");
  };

  return (
    <main className="min-h-screen flex items-center justify-center bg-gradient-to-br from-blue-50 to-blue-100">
      {/* ЁЯЦЛя╕П рж░рзЗржЬрж┐рж╕рзНржЯрзНрж░рзЗрж╢ржи ржлрж░рзНржо */}
      <form 
        onSubmit={handleSubmit} 
        className="bg-white p-8 rounded-lg shadow-lg max-w-md w-full space-y-5"
      >
        <h1 className="text-3xl font-bold text-center text-blue-600">
          Register
        </h1>

        {/* ЁЯФ┤ ржпржжрж┐ error ржерж╛ржХрзЗ, рж╕рзЗржЯрж╛ ржжрзЗржЦрж╛ржмрзЗ */}
        {error && <p className="text-red-600">{error}</p>}

        {/* ржирж╛ржо ржЗржиржкрзБржЯ */}
        <input
          type="text"
          placeholder="Name"
          value={name}
          onChange={(e) => setName(e.target.value)}
          className="w-full p-3 border rounded"
          required
        />

        {/* ржЗржорзЗржЗрж▓ ржЗржиржкрзБржЯ */}
        <input
          type="email"
          placeholder="Email"
          value={email}
          onChange={(e) => setEmail(e.target.value)}
          className="w-full p-3 border rounded"
          required
        />

        {/* ржкрж╛рж╕ржУржпрж╝рж╛рж░рзНржб ржЗржиржкрзБржЯ */}
        <input
          type="password"
          placeholder="Password"
          value={password}
          onChange={(e) => setPassword(e.target.value)}
          className="w-full p-3 border rounded"
          required
        />

        {/* рж╕рж╛ржмржорж┐ржЯ ржмрж╛ржЯржи */}
        <button 
          type="submit" 
          className="w-full bg-blue-600 text-white py-3 rounded hover:bg-blue-700"
        >
          Register & Login
        </button>
      </form>
    </main>
  );
}
